var search_data = {"index":{"searchIndex":["moviedata","movietest","mean()","movies()","new()","new()","predict()","rating()","rms()","run_test()","stddev()","to_a()","viewers()"],"longSearchIndex":["moviedata","movietest","movietest#mean()","moviedata#movies()","moviedata::new()","movietest::new()","moviedata#predict()","moviedata#rating()","movietest#rms()","moviedata#run_test()","movietest#stddev()","movietest#to_a()","moviedata#viewers()"],"info":[["MovieData","","MovieData.html","",""],["MovieTest","","MovieTest.html","",""],["mean","MovieTest","MovieTest.html#method-i-mean","()","<p>return the mean error of the predictions\n"],["movies","MovieData","MovieData.html#method-i-movies","(u)","<p>list all movies that user u watched\n"],["new","MovieData","MovieData.html#method-c-new","(path, name)","<p>receive the file path and the training/test set name\n"],["new","MovieTest","MovieTest.html#method-c-new","()","<p>declare some instance variables\n"],["predict","MovieData","MovieData.html#method-i-predict","(u, m)","<p>make a prediction of the rating which user u would give to movie m\n"],["rating","MovieData","MovieData.html#method-i-rating","(u, m)","<p>list the rating that user u gives to movie m\n"],["rms","MovieTest","MovieTest.html#method-i-rms","()","<p>return the root mean squared error\n"],["run_test","MovieData","MovieData.html#method-i-run_test","(k = -1)","<p>run the test of k lines of the test set\n"],["stddev","MovieTest","MovieTest.html#method-i-stddev","()","<p>return the standard deviation of the error\n"],["to_a","MovieTest","MovieTest.html#method-i-to_a","()","<p>return the prediction list in form of [user, movie, rating, predict_rating]\n"],["viewers","MovieData","MovieData.html#method-i-viewers","(m)","<p>list all users that have watched movie m\n"]]}}